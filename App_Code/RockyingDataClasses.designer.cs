#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rockying
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="rockyclf_rockying")]
	public partial class RockyingDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTopStory(Rockying.Models.TopStory instance);
    partial void UpdateTopStory(Rockying.Models.TopStory instance);
    partial void DeleteTopStory(Rockying.Models.TopStory instance);
    partial void InsertCustomPage(Rockying.Models.CustomPage instance);
    partial void UpdateCustomPage(Rockying.Models.CustomPage instance);
    partial void DeleteCustomPage(Rockying.Models.CustomPage instance);
    partial void InsertEmailMessage(Rockying.Models.EmailMessage instance);
    partial void UpdateEmailMessage(Rockying.Models.EmailMessage instance);
    partial void DeleteEmailMessage(Rockying.Models.EmailMessage instance);
    partial void InsertWebsiteSetting(Rockying.Models.WebsiteSetting instance);
    partial void UpdateWebsiteSetting(Rockying.Models.WebsiteSetting instance);
    partial void DeleteWebsiteSetting(Rockying.Models.WebsiteSetting instance);
    partial void InsertPageComment(Rockying.Models.PageComment instance);
    partial void UpdatePageComment(Rockying.Models.PageComment instance);
    partial void DeletePageComment(Rockying.Models.PageComment instance);
    partial void InsertMember(Rockying.Models.Member instance);
    partial void UpdateMember(Rockying.Models.Member instance);
    partial void DeleteMember(Rockying.Models.Member instance);
    partial void InsertCustomDataSource(Rockying.Models.CustomDataSource instance);
    partial void UpdateCustomDataSource(Rockying.Models.CustomDataSource instance);
    partial void DeleteCustomDataSource(Rockying.Models.CustomDataSource instance);
    partial void InsertPost(Rockying.Models.Post instance);
    partial void UpdatePost(Rockying.Models.Post instance);
    partial void DeletePost(Rockying.Models.Post instance);
    partial void InsertCategory(Rockying.Models.Category instance);
    partial void UpdateCategory(Rockying.Models.Category instance);
    partial void DeleteCategory(Rockying.Models.Category instance);
    partial void InsertBook(Rockying.Models.Book instance);
    partial void UpdateBook(Rockying.Models.Book instance);
    partial void DeleteBook(Rockying.Models.Book instance);
    partial void InsertSearchHistory(Rockying.Models.SearchHistory instance);
    partial void UpdateSearchHistory(Rockying.Models.SearchHistory instance);
    partial void DeleteSearchHistory(Rockying.Models.SearchHistory instance);
    partial void InsertMemberBook(Rockying.Models.MemberBook instance);
    partial void UpdateMemberBook(Rockying.Models.MemberBook instance);
    partial void DeleteMemberBook(Rockying.Models.MemberBook instance);
    #endregion
		
		public RockyingDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RockyingDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RockyingDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RockyingDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Rockying.Models.TopStory> TopStories
		{
			get
			{
				return this.GetTable<Rockying.Models.TopStory>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.CustomPage> CustomPages
		{
			get
			{
				return this.GetTable<Rockying.Models.CustomPage>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.EmailMessage> EmailMessages
		{
			get
			{
				return this.GetTable<Rockying.Models.EmailMessage>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.WebsiteSetting> WebsiteSettings
		{
			get
			{
				return this.GetTable<Rockying.Models.WebsiteSetting>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.PageComment> PageComments
		{
			get
			{
				return this.GetTable<Rockying.Models.PageComment>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.Member> Members
		{
			get
			{
				return this.GetTable<Rockying.Models.Member>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.CustomDataSource> CustomDataSources
		{
			get
			{
				return this.GetTable<Rockying.Models.CustomDataSource>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.Post> Posts
		{
			get
			{
				return this.GetTable<Rockying.Models.Post>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.Category> Categories
		{
			get
			{
				return this.GetTable<Rockying.Models.Category>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.Book> Books
		{
			get
			{
				return this.GetTable<Rockying.Models.Book>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.PopularBook> PopularBooks
		{
			get
			{
				return this.GetTable<Rockying.Models.PopularBook>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.SearchHistory> SearchHistories
		{
			get
			{
				return this.GetTable<Rockying.Models.SearchHistory>();
			}
		}
		
		public System.Data.Linq.Table<Rockying.Models.MemberBook> MemberBooks
		{
			get
			{
				return this.GetTable<Rockying.Models.MemberBook>();
			}
		}
	}
}
namespace Rockying.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TopStory")]
	public partial class TopStory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private long _PostId;
		
		private long _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostIdChanging(long value);
    partial void OnPostIdChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public TopStory()
		{
			this._Member = default(EntityRef<Member>);
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="BigInt NOT NULL")]
		public long PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TopStory", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.TopStories.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.TopStories.Add(this);
						this._CreatedBy = value.ID;
					}
					else
					{
						this._CreatedBy = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TopStory", Storage="_Post", ThisKey="PostId", OtherKey="ID", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.TopStories.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.TopStories.Add(this);
						this._PostId = value.ID;
					}
					else
					{
						this._PostId = default(long);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomPage")]
	public partial class CustomPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private long _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private byte _Status;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public CustomPage()
		{
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.CustomPages.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.CustomPages.Add(this);
						this._CreatedBy = value.ID;
					}
					else
					{
						this._CreatedBy = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.CustomPages1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.CustomPages1.Add(this);
						this._ModifiedBy = value.ID;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailMessage")]
	public partial class EmailMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _FromAddress;
		
		private string _ToAddress;
		
		private string _Subject;
		
		private string _Message;
		
		private bool _IsRead;
		
		private System.DateTime _SentDate;
		
		private System.DateTime _CreateDate;
		
		private bool _IsSent;
		
		private byte _EmailType;
		
		private string _EmailGroup;
		
		private System.Nullable<System.DateTime> _ReadDate;
		
		private string _CCAdress;
		
		private string _ToName;
		
		private string _FromName;
		
		private System.DateTime _LastAttempt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFromAddressChanging(string value);
    partial void OnFromAddressChanged();
    partial void OnToAddressChanging(string value);
    partial void OnToAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnSentDateChanging(System.DateTime value);
    partial void OnSentDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    partial void OnEmailTypeChanging(byte value);
    partial void OnEmailTypeChanged();
    partial void OnEmailGroupChanging(string value);
    partial void OnEmailGroupChanged();
    partial void OnReadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadDateChanged();
    partial void OnCCAdressChanging(string value);
    partial void OnCCAdressChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnLastAttemptChanging(System.DateTime value);
    partial void OnLastAttemptChanged();
    #endregion
		
		public EmailMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FromAddress
		{
			get
			{
				return this._FromAddress;
			}
			set
			{
				if ((this._FromAddress != value))
				{
					this.OnFromAddressChanging(value);
					this.SendPropertyChanging();
					this._FromAddress = value;
					this.SendPropertyChanged("FromAddress");
					this.OnFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ToAddress
		{
			get
			{
				return this._ToAddress;
			}
			set
			{
				if ((this._ToAddress != value))
				{
					this.OnToAddressChanging(value);
					this.SendPropertyChanging();
					this._ToAddress = value;
					this.SendPropertyChanged("ToAddress");
					this.OnToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime NOT NULL")]
		public System.DateTime SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="TinyInt NOT NULL")]
		public byte EmailType
		{
			get
			{
				return this._EmailType;
			}
			set
			{
				if ((this._EmailType != value))
				{
					this.OnEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._EmailType = value;
					this.SendPropertyChanged("EmailType");
					this.OnEmailTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailGroup", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string EmailGroup
		{
			get
			{
				return this._EmailGroup;
			}
			set
			{
				if ((this._EmailGroup != value))
				{
					this.OnEmailGroupChanging(value);
					this.SendPropertyChanging();
					this._EmailGroup = value;
					this.SendPropertyChanged("EmailGroup");
					this.OnEmailGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadDate
		{
			get
			{
				return this._ReadDate;
			}
			set
			{
				if ((this._ReadDate != value))
				{
					this.OnReadDateChanging(value);
					this.SendPropertyChanging();
					this._ReadDate = value;
					this.SendPropertyChanged("ReadDate");
					this.OnReadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCAdress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CCAdress
		{
			get
			{
				return this._CCAdress;
			}
			set
			{
				if ((this._CCAdress != value))
				{
					this.OnCCAdressChanging(value);
					this.SendPropertyChanging();
					this._CCAdress = value;
					this.SendPropertyChanged("CCAdress");
					this.OnCCAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAttempt", DbType="DateTime NOT NULL")]
		public System.DateTime LastAttempt
		{
			get
			{
				return this._LastAttempt;
			}
			set
			{
				if ((this._LastAttempt != value))
				{
					this.OnLastAttemptChanging(value);
					this.SendPropertyChanging();
					this._LastAttempt = value;
					this.SendPropertyChanged("LastAttempt");
					this.OnLastAttemptChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebsiteSetting")]
	public partial class WebsiteSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KeyName;
		
		private string _KeyValue;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnKeyValueChanging(string value);
    partial void OnKeyValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public WebsiteSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string KeyValue
		{
			get
			{
				return this._KeyValue;
			}
			set
			{
				if ((this._KeyValue != value))
				{
					this.OnKeyValueChanging(value);
					this.SendPropertyChanging();
					this._KeyValue = value;
					this.SendPropertyChanged("KeyValue");
					this.OnKeyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageComment")]
	public partial class PageComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _MemberID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Website;
		
		private string _MessageText;
		
		private System.DateTime _CreateDate;
		
		private byte _Status;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private string _Note;
		
		private System.Nullable<long> _ParentId;
		
		private string _URL;
		
		private byte _CommentType;
		
		private string _IPAddress;
		
		private string _ContentID;
		
		private EntitySet<PageComment> _PageComments;
		
		private EntityRef<PageComment> _PageComment1;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(System.Nullable<long> value);
    partial void OnMemberIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnParentIdChanging(System.Nullable<long> value);
    partial void OnParentIdChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnCommentTypeChanging(byte value);
    partial void OnCommentTypeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnContentIDChanging(string value);
    partial void OnContentIDChanged();
    #endregion
		
		public PageComment()
		{
			this._PageComments = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments), new Action<PageComment>(this.detach_PageComments));
			this._PageComment1 = default(EntityRef<PageComment>);
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt")]
		public System.Nullable<long> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt")]
		public System.Nullable<long> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._PageComment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentType", DbType="TinyInt NOT NULL")]
		public byte CommentType
		{
			get
			{
				return this._CommentType;
			}
			set
			{
				if ((this._CommentType != value))
				{
					this.OnCommentTypeChanging(value);
					this.SendPropertyChanging();
					this._CommentType = value;
					this.SendPropertyChanged("CommentType");
					this.OnCommentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentID", DbType="NVarChar(20)")]
		public string ContentID
		{
			get
			{
				return this._ContentID;
			}
			set
			{
				if ((this._ContentID != value))
				{
					this.OnContentIDChanging(value);
					this.SendPropertyChanging();
					this._ContentID = value;
					this.SendPropertyChanged("ContentID");
					this.OnContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageComment_PageComment", Storage="_PageComments", ThisKey="ID", OtherKey="ParentId")]
		public EntitySet<PageComment> PageComments
		{
			get
			{
				return this._PageComments;
			}
			set
			{
				this._PageComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageComment_PageComment", Storage="_PageComment1", ThisKey="ParentId", OtherKey="ID", IsForeignKey=true)]
		public PageComment PageComment1
		{
			get
			{
				return this._PageComment1.Entity;
			}
			set
			{
				PageComment previousValue = this._PageComment1.Entity;
				if (((previousValue != value) 
							|| (this._PageComment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageComment1.Entity = null;
						previousValue.PageComments.Remove(this);
					}
					this._PageComment1.Entity = value;
					if ((value != null))
					{
						value.PageComments.Add(this);
						this._ParentId = value.ID;
					}
					else
					{
						this._ParentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PageComment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.PageComments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.PageComments.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.PageComments1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.PageComments1.Add(this);
						this._ModifiedBy = value.ID;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageComments(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.PageComment1 = this;
		}
		
		private void detach_PageComments(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.PageComment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Email;
		
		private string _Password;
		
		private System.DateTime _Createdate;
		
		private bool _Newsletter;
		
		private byte _UserType;
		
		private string _MemberName;
		
		private byte _Status;
		
		private System.Nullable<System.DateTime> _LastLogon;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Country;
		
		private string _AlternateEmail;
		
		private string _Mobile;
		
		private string _AlternateEmail2;
		
		private string _Phone;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<long> _ModifiedBy;
		
		private string _LastName;
		
		private System.Nullable<char> _Gender;
		
		private string _MemberImage;
		
		private string _UserName;
		
		private System.Nullable<System.Guid> _DriveID;
		
		private EntitySet<TopStory> _TopStories;
		
		private EntitySet<CustomPage> _CustomPages;
		
		private EntitySet<CustomPage> _CustomPages1;
		
		private EntitySet<PageComment> _PageComments;
		
		private EntitySet<PageComment> _PageComments1;
		
		private EntitySet<Member> _Members;
		
		private EntitySet<CustomDataSource> _CustomDataSources;
		
		private EntitySet<CustomDataSource> _CustomDataSources1;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Post> _Posts1;
		
		private EntitySet<SearchHistory> _SearchHistories;
		
		private EntitySet<MemberBook> _MemberBooks;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedateChanging(System.DateTime value);
    partial void OnCreatedateChanged();
    partial void OnNewsletterChanging(bool value);
    partial void OnNewsletterChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnLastLogonChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLogonChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnAlternateEmailChanging(string value);
    partial void OnAlternateEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAlternateEmail2Changing(string value);
    partial void OnAlternateEmail2Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnMemberImageChanging(string value);
    partial void OnMemberImageChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDriveIDChanging(System.Nullable<System.Guid> value);
    partial void OnDriveIDChanged();
    #endregion
		
		public Member()
		{
			this._TopStories = new EntitySet<TopStory>(new Action<TopStory>(this.attach_TopStories), new Action<TopStory>(this.detach_TopStories));
			this._CustomPages = new EntitySet<CustomPage>(new Action<CustomPage>(this.attach_CustomPages), new Action<CustomPage>(this.detach_CustomPages));
			this._CustomPages1 = new EntitySet<CustomPage>(new Action<CustomPage>(this.attach_CustomPages1), new Action<CustomPage>(this.detach_CustomPages1));
			this._PageComments = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments), new Action<PageComment>(this.detach_PageComments));
			this._PageComments1 = new EntitySet<PageComment>(new Action<PageComment>(this.attach_PageComments1), new Action<PageComment>(this.detach_PageComments1));
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			this._CustomDataSources = new EntitySet<CustomDataSource>(new Action<CustomDataSource>(this.attach_CustomDataSources), new Action<CustomDataSource>(this.detach_CustomDataSources));
			this._CustomDataSources1 = new EntitySet<CustomDataSource>(new Action<CustomDataSource>(this.attach_CustomDataSources1), new Action<CustomDataSource>(this.detach_CustomDataSources1));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Posts1 = new EntitySet<Post>(new Action<Post>(this.attach_Posts1), new Action<Post>(this.detach_Posts1));
			this._SearchHistories = new EntitySet<SearchHistory>(new Action<SearchHistory>(this.attach_SearchHistories), new Action<SearchHistory>(this.detach_SearchHistories));
			this._MemberBooks = new EntitySet<MemberBook>(new Action<MemberBook>(this.attach_MemberBooks), new Action<MemberBook>(this.detach_MemberBooks));
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdate", DbType="DateTime NOT NULL")]
		public System.DateTime Createdate
		{
			get
			{
				return this._Createdate;
			}
			set
			{
				if ((this._Createdate != value))
				{
					this.OnCreatedateChanging(value);
					this.SendPropertyChanging();
					this._Createdate = value;
					this.SendPropertyChanged("Createdate");
					this.OnCreatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newsletter", DbType="Bit NOT NULL")]
		public bool Newsletter
		{
			get
			{
				return this._Newsletter;
			}
			set
			{
				if ((this._Newsletter != value))
				{
					this.OnNewsletterChanging(value);
					this.SendPropertyChanging();
					this._Newsletter = value;
					this.SendPropertyChanged("Newsletter");
					this.OnNewsletterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this.OnMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MemberName = value;
					this.SendPropertyChanged("MemberName");
					this.OnMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogon", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogon
		{
			get
			{
				return this._LastLogon;
			}
			set
			{
				if ((this._LastLogon != value))
				{
					this.OnLastLogonChanging(value);
					this.SendPropertyChanging();
					this._LastLogon = value;
					this.SendPropertyChanged("LastLogon");
					this.OnLastLogonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(10)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail", DbType="NVarChar(250)")]
		public string AlternateEmail
		{
			get
			{
				return this._AlternateEmail;
			}
			set
			{
				if ((this._AlternateEmail != value))
				{
					this.OnAlternateEmailChanging(value);
					this.SendPropertyChanging();
					this._AlternateEmail = value;
					this.SendPropertyChanged("AlternateEmail");
					this.OnAlternateEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEmail2", DbType="NVarChar(250)")]
		public string AlternateEmail2
		{
			get
			{
				return this._AlternateEmail2;
			}
			set
			{
				if ((this._AlternateEmail2 != value))
				{
					this.OnAlternateEmail2Changing(value);
					this.SendPropertyChanging();
					this._AlternateEmail2 = value;
					this.SendPropertyChanged("AlternateEmail2");
					this.OnAlternateEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(200)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberImage", DbType="NVarChar(250)")]
		public string MemberImage
		{
			get
			{
				return this._MemberImage;
			}
			set
			{
				if ((this._MemberImage != value))
				{
					this.OnMemberImageChanging(value);
					this.SendPropertyChanging();
					this._MemberImage = value;
					this.SendPropertyChanged("MemberImage");
					this.OnMemberImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DriveID
		{
			get
			{
				return this._DriveID;
			}
			set
			{
				if ((this._DriveID != value))
				{
					this.OnDriveIDChanging(value);
					this.SendPropertyChanging();
					this._DriveID = value;
					this.SendPropertyChanged("DriveID");
					this.OnDriveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TopStory", Storage="_TopStories", ThisKey="ID", OtherKey="CreatedBy")]
		public EntitySet<TopStory> TopStories
		{
			get
			{
				return this._TopStories;
			}
			set
			{
				this._TopStories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage", Storage="_CustomPages", ThisKey="ID", OtherKey="CreatedBy")]
		public EntitySet<CustomPage> CustomPages
		{
			get
			{
				return this._CustomPages;
			}
			set
			{
				this._CustomPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomPage1", Storage="_CustomPages1", ThisKey="ID", OtherKey="ModifiedBy")]
		public EntitySet<CustomPage> CustomPages1
		{
			get
			{
				return this._CustomPages1;
			}
			set
			{
				this._CustomPages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment", Storage="_PageComments", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<PageComment> PageComments
		{
			get
			{
				return this._PageComments;
			}
			set
			{
				this._PageComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PageComment1", Storage="_PageComments1", ThisKey="ID", OtherKey="ModifiedBy")]
		public EntitySet<PageComment> PageComments1
		{
			get
			{
				return this._PageComments1;
			}
			set
			{
				this._PageComments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Member", Storage="_Members", ThisKey="ID", OtherKey="ModifiedBy")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource", Storage="_CustomDataSources", ThisKey="ID", OtherKey="CreatedBy")]
		public EntitySet<CustomDataSource> CustomDataSources
		{
			get
			{
				return this._CustomDataSources;
			}
			set
			{
				this._CustomDataSources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource1", Storage="_CustomDataSources1", ThisKey="ID", OtherKey="ModifiedBy")]
		public EntitySet<CustomDataSource> CustomDataSources1
		{
			get
			{
				return this._CustomDataSources1;
			}
			set
			{
				this._CustomDataSources1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post", Storage="_Posts", ThisKey="ID", OtherKey="CreatedBy")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post1", Storage="_Posts1", ThisKey="ID", OtherKey="ModifiedBy")]
		public EntitySet<Post> Posts1
		{
			get
			{
				return this._Posts1;
			}
			set
			{
				this._Posts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SearchHistory", Storage="_SearchHistories", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<SearchHistory> SearchHistories
		{
			get
			{
				return this._SearchHistories;
			}
			set
			{
				this._SearchHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberBook1", Storage="_MemberBooks", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<MemberBook> MemberBooks
		{
			get
			{
				return this._MemberBooks;
			}
			set
			{
				this._MemberBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Member", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._ModifiedBy = value.ID;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TopStories(TopStory entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_TopStories(TopStory entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_CustomPages(CustomPage entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_CustomPages(CustomPage entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_CustomPages1(CustomPage entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_CustomPages1(CustomPage entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_PageComments(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_PageComments(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_PageComments1(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_PageComments1(PageComment entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_CustomDataSources(CustomDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_CustomDataSources(CustomDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_CustomDataSources1(CustomDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_CustomDataSources1(CustomDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_SearchHistories(SearchHistory entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_SearchHistories(SearchHistory entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberBooks(MemberBook entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberBooks(MemberBook entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomDataSource")]
	public partial class CustomDataSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Query;
		
		private System.DateTime _DateCreated;
		
		private long _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private string _HtmlTemplate;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnHtmlTemplateChanging(string value);
    partial void OnHtmlTemplateChanged();
    #endregion
		
		public CustomDataSource()
		{
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTemplate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HtmlTemplate
		{
			get
			{
				return this._HtmlTemplate;
			}
			set
			{
				if ((this._HtmlTemplate != value))
				{
					this.OnHtmlTemplateChanging(value);
					this.SendPropertyChanging();
					this._HtmlTemplate = value;
					this.SendPropertyChanged("HtmlTemplate");
					this.OnHtmlTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.CustomDataSources.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.CustomDataSources.Add(this);
						this._CreatedBy = value.ID;
					}
					else
					{
						this._CreatedBy = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_CustomDataSource1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.CustomDataSources1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.CustomDataSources1.Add(this);
						this._ModifiedBy = value.ID;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private System.Nullable<long> _ModifiedBy;
		
		private int _Category;
		
		private string _Tag;
		
		private byte _Status;
		
		private string _Description;
		
		private string _Article;
		
		private string _WriterName;
		
		private string _WriterEmail;
		
		private string _OGImage;
		
		private string _OGDescription;
		
		private int _Viewed;
		
		private string _URL;
		
		private EntitySet<TopStory> _TopStories;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnWriterNameChanging(string value);
    partial void OnWriterNameChanged();
    partial void OnWriterEmailChanging(string value);
    partial void OnWriterEmailChanged();
    partial void OnOGImageChanging(string value);
    partial void OnOGImageChanged();
    partial void OnOGDescriptionChanging(string value);
    partial void OnOGDescriptionChanged();
    partial void OnViewedChanging(int value);
    partial void OnViewedChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Post()
		{
			this._TopStories = new EntitySet<TopStory>(new Action<TopStory>(this.attach_TopStories), new Action<TopStory>(this.detach_TopStories));
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL")]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriterName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WriterName
		{
			get
			{
				return this._WriterName;
			}
			set
			{
				if ((this._WriterName != value))
				{
					this.OnWriterNameChanging(value);
					this.SendPropertyChanging();
					this._WriterName = value;
					this.SendPropertyChanged("WriterName");
					this.OnWriterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriterEmail", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string WriterEmail
		{
			get
			{
				return this._WriterEmail;
			}
			set
			{
				if ((this._WriterEmail != value))
				{
					this.OnWriterEmailChanging(value);
					this.SendPropertyChanging();
					this._WriterEmail = value;
					this.SendPropertyChanged("WriterEmail");
					this.OnWriterEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGImage", DbType="VarChar(300)")]
		public string OGImage
		{
			get
			{
				return this._OGImage;
			}
			set
			{
				if ((this._OGImage != value))
				{
					this.OnOGImageChanging(value);
					this.SendPropertyChanging();
					this._OGImage = value;
					this.SendPropertyChanged("OGImage");
					this.OnOGImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGDescription", DbType="VarChar(500)")]
		public string OGDescription
		{
			get
			{
				return this._OGDescription;
			}
			set
			{
				if ((this._OGDescription != value))
				{
					this.OnOGDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OGDescription = value;
					this.SendPropertyChanged("OGDescription");
					this.OnOGDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewed", DbType="Int NOT NULL")]
		public int Viewed
		{
			get
			{
				return this._Viewed;
			}
			set
			{
				if ((this._Viewed != value))
				{
					this.OnViewedChanging(value);
					this.SendPropertyChanging();
					this._Viewed = value;
					this.SendPropertyChanged("Viewed");
					this.OnViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_TopStory", Storage="_TopStories", ThisKey="ID", OtherKey="PostId")]
		public EntitySet<TopStory> TopStories
		{
			get
			{
				return this._TopStories;
			}
			set
			{
				this._TopStories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post", Storage="_Member", ThisKey="CreatedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._CreatedBy = value.ID;
					}
					else
					{
						this._CreatedBy = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Post1", Storage="_Member1", ThisKey="ModifiedBy", OtherKey="ID", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.Posts1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.Posts1.Add(this);
						this._ModifiedBy = value.ID;
					}
					else
					{
						this._ModifiedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Category1", ThisKey="Category", OtherKey="ID", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._Category = value.ID;
					}
					else
					{
						this._Category = default(int);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TopStories(TopStory entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_TopStories(TopStory entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UrlName;
		
		private System.Nullable<int> _Parent;
		
		private byte _Status;
		
		private string _Keywords;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Category> _Categories;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlNameChanging(string value);
    partial void OnUrlNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    #endregion
		
		public Category()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UrlName
		{
			get
			{
				return this._UrlName;
			}
			set
			{
				if ((this._UrlName != value))
				{
					this.OnUrlNameChanging(value);
					this.SendPropertyChanging();
					this._UrlName = value;
					this.SendPropertyChanged("UrlName");
					this.OnUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(1000)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Post", Storage="_Posts", ThisKey="ID", OtherKey="Category")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private string _CoverPage;
		
		private System.DateTime _CreateDate;
		
		private string _Description;
		
		private string _Author;
		
		private string _ISBN13;
		
		private string _ISBN10;
		
		private int _PageCount;
		
		private string _PublishDate;
		
		private string _Publisher;
		
		private string _Categories;
		
		private string _GoogleData;
		
		private string _Identifiers;
		
		private EntitySet<MemberBook> _MemberBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCoverPageChanging(string value);
    partial void OnCoverPageChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnISBN13Changing(string value);
    partial void OnISBN13Changed();
    partial void OnISBN10Changing(string value);
    partial void OnISBN10Changed();
    partial void OnPageCountChanging(int value);
    partial void OnPageCountChanged();
    partial void OnPublishDateChanging(string value);
    partial void OnPublishDateChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnCategoriesChanging(string value);
    partial void OnCategoriesChanged();
    partial void OnGoogleDataChanging(string value);
    partial void OnGoogleDataChanged();
    partial void OnIdentifiersChanging(string value);
    partial void OnIdentifiersChanged();
    #endregion
		
		public Book()
		{
			this._MemberBooks = new EntitySet<MemberBook>(new Action<MemberBook>(this.attach_MemberBooks), new Action<MemberBook>(this.detach_MemberBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverPage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CoverPage
		{
			get
			{
				return this._CoverPage;
			}
			set
			{
				if ((this._CoverPage != value))
				{
					this.OnCoverPageChanging(value);
					this.SendPropertyChanging();
					this._CoverPage = value;
					this.SendPropertyChanged("CoverPage");
					this.OnCoverPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(3000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN13", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ISBN13
		{
			get
			{
				return this._ISBN13;
			}
			set
			{
				if ((this._ISBN13 != value))
				{
					this.OnISBN13Changing(value);
					this.SendPropertyChanging();
					this._ISBN13 = value;
					this.SendPropertyChanged("ISBN13");
					this.OnISBN13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN10", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ISBN10
		{
			get
			{
				return this._ISBN10;
			}
			set
			{
				if ((this._ISBN10 != value))
				{
					this.OnISBN10Changing(value);
					this.SendPropertyChanging();
					this._ISBN10 = value;
					this.SendPropertyChanged("ISBN10");
					this.OnISBN10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageCount", DbType="Int NOT NULL")]
		public int PageCount
		{
			get
			{
				return this._PageCount;
			}
			set
			{
				if ((this._PageCount != value))
				{
					this.OnPageCountChanging(value);
					this.SendPropertyChanging();
					this._PageCount = value;
					this.SendPropertyChanged("PageCount");
					this.OnPageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this.OnCategoriesChanging(value);
					this.SendPropertyChanging();
					this._Categories = value;
					this.SendPropertyChanged("Categories");
					this.OnCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleData", DbType="NVarChar(MAX)")]
		public string GoogleData
		{
			get
			{
				return this._GoogleData;
			}
			set
			{
				if ((this._GoogleData != value))
				{
					this.OnGoogleDataChanging(value);
					this.SendPropertyChanging();
					this._GoogleData = value;
					this.SendPropertyChanged("GoogleData");
					this.OnGoogleDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifiers", DbType="NVarChar(2000)")]
		public string Identifiers
		{
			get
			{
				return this._Identifiers;
			}
			set
			{
				if ((this._Identifiers != value))
				{
					this.OnIdentifiersChanging(value);
					this.SendPropertyChanging();
					this._Identifiers = value;
					this.SendPropertyChanged("Identifiers");
					this.OnIdentifiersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_MemberBook1", Storage="_MemberBooks", ThisKey="ID", OtherKey="BookID")]
		public EntitySet<MemberBook> MemberBooks
		{
			get
			{
				return this._MemberBooks;
			}
			set
			{
				this._MemberBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberBooks(MemberBook entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_MemberBooks(MemberBook entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PopularBookView")]
	public partial class PopularBook
	{
		
		private System.Nullable<int> _ShelfCount;
		
		private long _ID;
		
		private string _Title;
		
		private string _CoverPage;
		
		private string _Author;
		
		private string _Categories;
		
		public PopularBook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfCount", DbType="Int")]
		public System.Nullable<int> ShelfCount
		{
			get
			{
				return this._ShelfCount;
			}
			set
			{
				if ((this._ShelfCount != value))
				{
					this._ShelfCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverPage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CoverPage
		{
			get
			{
				return this._CoverPage;
			}
			set
			{
				if ((this._CoverPage != value))
				{
					this._CoverPage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this._Categories = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchHistory")]
	public partial class SearchHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _SearchType;
		
		private string _Keywords;
		
		private System.DateTime _SearchDate;
		
		private int _ResultCount;
		
		private System.Nullable<long> _MemberID;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSearchTypeChanging(int value);
    partial void OnSearchTypeChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnSearchDateChanging(System.DateTime value);
    partial void OnSearchDateChanged();
    partial void OnResultCountChanging(int value);
    partial void OnResultCountChanged();
    partial void OnMemberIDChanging(System.Nullable<long> value);
    partial void OnMemberIDChanged();
    #endregion
		
		public SearchHistory()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchType", DbType="Int NOT NULL")]
		public int SearchType
		{
			get
			{
				return this._SearchType;
			}
			set
			{
				if ((this._SearchType != value))
				{
					this.OnSearchTypeChanging(value);
					this.SendPropertyChanging();
					this._SearchType = value;
					this.SendPropertyChanged("SearchType");
					this.OnSearchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchDate", DbType="DateTime NOT NULL")]
		public System.DateTime SearchDate
		{
			get
			{
				return this._SearchDate;
			}
			set
			{
				if ((this._SearchDate != value))
				{
					this.OnSearchDateChanging(value);
					this.SendPropertyChanging();
					this._SearchDate = value;
					this.SendPropertyChanged("SearchDate");
					this.OnSearchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCount", DbType="Int NOT NULL")]
		public int ResultCount
		{
			get
			{
				return this._ResultCount;
			}
			set
			{
				if ((this._ResultCount != value))
				{
					this.OnResultCountChanging(value);
					this.SendPropertyChanging();
					this._ResultCount = value;
					this.SendPropertyChanged("ResultCount");
					this.OnResultCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt")]
		public System.Nullable<long> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SearchHistory", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.SearchHistories.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.SearchHistories.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberBook")]
	public partial class MemberBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _MemberID;
		
		private long _BookID;
		
		private string _Review;
		
		private byte _ReadStatus;
		
		private byte _Emotion;
		
		private System.Nullable<System.DateTime> _ReadingStartDate;
		
		private System.Nullable<int> _CurrentPage;
		
		private System.Nullable<int> _TimesRead;
		
		private string _Photo;
		
		private System.Nullable<System.DateTime> _ReadingCompleteDate;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnBookIDChanging(long value);
    partial void OnBookIDChanged();
    partial void OnReviewChanging(string value);
    partial void OnReviewChanged();
    partial void OnReadStatusChanging(byte value);
    partial void OnReadStatusChanged();
    partial void OnEmotionChanging(byte value);
    partial void OnEmotionChanged();
    partial void OnReadingStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadingStartDateChanged();
    partial void OnCurrentPageChanging(System.Nullable<int> value);
    partial void OnCurrentPageChanged();
    partial void OnTimesReadChanging(System.Nullable<int> value);
    partial void OnTimesReadChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnReadingCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReadingCompleteDateChanged();
    #endregion
		
		public MemberBook()
		{
			this._Book = default(EntityRef<Book>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="BigInt NOT NULL")]
		public long BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="NVarChar(3000) NOT NULL", CanBeNull=false)]
		public string Review
		{
			get
			{
				return this._Review;
			}
			set
			{
				if ((this._Review != value))
				{
					this.OnReviewChanging(value);
					this.SendPropertyChanging();
					this._Review = value;
					this.SendPropertyChanged("Review");
					this.OnReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadStatus", DbType="TinyInt NOT NULL")]
		public byte ReadStatus
		{
			get
			{
				return this._ReadStatus;
			}
			set
			{
				if ((this._ReadStatus != value))
				{
					this.OnReadStatusChanging(value);
					this.SendPropertyChanging();
					this._ReadStatus = value;
					this.SendPropertyChanged("ReadStatus");
					this.OnReadStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emotion", DbType="TinyInt NOT NULL")]
		public byte Emotion
		{
			get
			{
				return this._Emotion;
			}
			set
			{
				if ((this._Emotion != value))
				{
					this.OnEmotionChanging(value);
					this.SendPropertyChanging();
					this._Emotion = value;
					this.SendPropertyChanged("Emotion");
					this.OnEmotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadingStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadingStartDate
		{
			get
			{
				return this._ReadingStartDate;
			}
			set
			{
				if ((this._ReadingStartDate != value))
				{
					this.OnReadingStartDateChanging(value);
					this.SendPropertyChanging();
					this._ReadingStartDate = value;
					this.SendPropertyChanged("ReadingStartDate");
					this.OnReadingStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPage", DbType="Int")]
		public System.Nullable<int> CurrentPage
		{
			get
			{
				return this._CurrentPage;
			}
			set
			{
				if ((this._CurrentPage != value))
				{
					this.OnCurrentPageChanging(value);
					this.SendPropertyChanging();
					this._CurrentPage = value;
					this.SendPropertyChanged("CurrentPage");
					this.OnCurrentPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesRead", DbType="Int")]
		public System.Nullable<int> TimesRead
		{
			get
			{
				return this._TimesRead;
			}
			set
			{
				if ((this._TimesRead != value))
				{
					this.OnTimesReadChanging(value);
					this.SendPropertyChanging();
					this._TimesRead = value;
					this.SendPropertyChanged("TimesRead");
					this.OnTimesReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadingCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadingCompleteDate
		{
			get
			{
				return this._ReadingCompleteDate;
			}
			set
			{
				if ((this._ReadingCompleteDate != value))
				{
					this.OnReadingCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._ReadingCompleteDate = value;
					this.SendPropertyChanged("ReadingCompleteDate");
					this.OnReadingCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_MemberBook1", Storage="_Book", ThisKey="BookID", OtherKey="ID", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.MemberBooks.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.MemberBooks.Add(this);
						this._BookID = value.ID;
					}
					else
					{
						this._BookID = default(long);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberBook1", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberBooks.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberBooks.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
